global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL settings
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend main
    # Écouter sur HTTP et HTTPS
    bind *:80
    bind *:443 ssl crt /etc/ssl/haproxy/haproxy.pem

    # Rediriger HTTP vers HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

    # Options de sécurité
    http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff

    # ACLs pour le routage
    acl is_app1 path_beg /app1
    acl is_app2 path_beg /app2

    # Routage vers backends
    use_backend app1_servers if is_app1
    use_backend app2_servers if is_app2
    default_backend app_servers

backend app_servers
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    server app1_site2 192.168.22.21:80 check
    server app2_site2 192.168.22.22:80 check
    # Serveurs du site 1 pour la haute disponibilité
    server app1_site1 192.168.12.21:80 backup check
    server app2_site1 192.168.12.22:80 backup check

backend app1_servers
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    server app1 192.168.22.21:80 check
    # Serveur du site 1 pour la haute disponibilité
    server app1_site1 192.168.12.21:80 backup check

backend app2_servers
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    server app2 192.168.22.22:80 check
    # Serveur du site 1 pour la haute disponibilité
    server app2_site1 192.168.12.22:80 backup check

listen stats
    bind *:8404 ssl crt /etc/ssl/haproxy/haproxy.pem
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:admin
    stats hide-version
    stats show-node